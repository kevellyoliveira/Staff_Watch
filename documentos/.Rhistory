# Carregar as bibliotecas necessárias
library(RMySQL)
library(dplyr)
library(ggplot2)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='#Gf47722899846', dbname='StaffWatch', host='localhost')
# Consultar os dados
query <- "SELECT ca.dataCaptura,
ac.unidadeMedida AS tipo_rede,
ca.captura AS valor_bytes,
ca.fkComputador
FROM captura ca
INNER JOIN auxComponente ac ON ca.fkAuxComponente = ac.idAuxComponente
WHERE ac.unidadeMedida IN ('redeEnvio', 'redeRecebidos')
ORDER BY ca.fkComputador, ca.dataCaptura;
"
data_raw <- dbGetQuery(con, query)
# Verificando os dados extraídos
print(head(data_raw))
# Transformar os dados
data_processed <- data_raw %>%
mutate(valor_bytes = as.numeric(valor_bytes), # Converter para numérico
valor_megabytes = valor_bytes / (1024^2)) # Convertendo bytes para MB
# Criar gráfico de tráfego de rede por computador
ggplot(data_processed, aes(x = dataCaptura, y = valor_megabytes, color = as.factor(fkComputador))) +
geom_line() +
geom_point() +
labs(title = "Tráfego de Rede por Computador",
x = "Data de Captura",
y = "Dados em MB",
color = "Computador") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Preparar os dados para inserção
data_to_db <- data_processed %>%
select(dataCaptura, valor_megabytes, fkComputador) %>%
mutate(cor = as.factor(fkComputador)) # Adicionar coluna de cor (identificação do computador)
# Conectar ao banco de dados novamente
con <- dbConnect(MySQL(), user='root', password='#Gf47722899846', dbname='StaffWatch', host='localhost')
# Inserir os dados em uma nova tabela ou atualizar uma existente
dbWriteTable(con, "trafego_rede_grafico", data_to_db, append = TRUE, row.names = FALSE)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='Crfsruan1', dbname='StaffWatch', host='localhost')
# Carregar as bibliotecas necessárias
library(RMySQL)
library(dplyr)
library(ggplot2)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='Crfsruan1', dbname='StaffWatch', host='localhost')
# Consultar os dados
query <- "SELECT ca.dataCaptura,
ac.unidadeMedida AS tipo_rede,
ca.captura AS valor_bytes,
ca.fkComputador
FROM captura ca
INNER JOIN auxComponente ac ON ca.fkAuxComponente = ac.idAuxComponente
WHERE ac.unidadeMedida IN ('redeEnvio', 'redeRecebidos')
ORDER BY ca.fkComputador, ca.dataCaptura;
"
data_raw <- dbGetQuery(con, query)
# Verificando os dados extraídos
print(head(data_raw))
# Transformar os dados
data_processed <- data_raw %>%
mutate(valor_bytes = as.numeric(valor_bytes), # Converter para numérico
valor_megabytes = valor_bytes / (1024^2)) # Convertendo bytes para MB
# Criar gráfico de tráfego de rede por computador
ggplot(data_processed, aes(x = dataCaptura, y = valor_megabytes, color = as.factor(fkComputador))) +
geom_line() +
geom_point() +
labs(title = "Tráfego de Rede por Computador",
x = "Data de Captura",
y = "Dados em MB",
color = "Computador") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Preparar os dados para inserção
data_to_db <- data_processed %>%
select(dataCaptura, valor_megabytes, fkComputador) %>%
mutate(cor = as.factor(fkComputador)) # Adicionar coluna de cor (identificação do computador)
# Conectar ao banco de dados novamente
con <- dbConnect(MySQL(), user='root', password='Crfsruan1', dbname='StaffWatch', host='localhost')
# Carregar as bibliotecas necessárias
library(RMySQL)
library(dplyr)
library(ggplot2)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='Crfsruan1', dbname='StaffWatch', host='localhost')
# Carregar as bibliotecas necessárias
library(RMySQL)
library(dplyr)
library(ggplot2)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='#Gf47722899846', dbname='StaffWatch', host='localhost')
# Consultar os dados
query <- "SELECT ca.dataCaptura,
ac.unidadeMedida AS tipo_rede,
ca.captura AS valor_bytes,
ca.fkComputador
FROM captura ca
INNER JOIN auxComponente ac ON ca.fkAuxComponente = ac.idAuxComponente
WHERE ac.unidadeMedida IN ('redeEnvio', 'redeRecebidos')
ORDER BY ca.fkComputador, ca.dataCaptura;
"
data_raw <- dbGetQuery(con, query)
# Verificando os dados extraídos
print(head(data_raw))
# Transformar os dados
data_processed <- data_raw %>%
mutate(valor_bytes = as.numeric(valor_bytes), # Converter para numérico
valor_megabytes = valor_bytes / (1024^2)) # Convertendo bytes para MB
# Preparar os dados para inserção no banco de dados
data_to_db <- data_processed %>%
select(dataCaptura, valor_megabytes, fkComputador) %>%
rename(data_captura = dataCaptura,
dados_mb = valor_megabytes,
computador = fkComputador)
# Inserir os dados em uma nova tabela no banco de dados
dbWriteTable(con, "grafico_trafego_rede", data_to_db, append = TRUE, row.names = FALSE, overwrite = FALSE)
# Carregar as bibliotecas necessárias
library(RMySQL)
library(dplyr)
library(ggplot2)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='#Gf47722899846', dbname='StaffWatch', host='localhost')
# Consultar os dados
query <- "SELECT ca.dataCaptura,
ac.unidadeMedida AS tipo_rede,
ca.captura AS valor_bytes,
ca.fkComputador
FROM captura ca
INNER JOIN auxComponente ac ON ca.fkAuxComponente = ac.idAuxComponente
WHERE ac.unidadeMedida IN ('redeEnvio', 'redeRecebidos')
ORDER BY ca.fkComputador, ca.dataCaptura;
"
data_raw <- dbGetQuery(con, query)
# Verificando os dados extraídos
print(head(data_raw))
# Transformar os dados
data_processed <- data_raw %>%
mutate(valor_bytes = as.numeric(valor_bytes), # Converter para numérico
valor_megabytes = valor_bytes / (1024^2)) # Convertendo bytes para MB
# Preparar os dados para inserção no banco de dados
data_to_db <- data_processed %>%
select(dataCaptura, valor_megabytes, fkComputador) %>%
rename(data_captura = dataCaptura,
dados_mb = valor_megabytes,
computador = fkComputador)
con <- dbConnect(MySQL(), user='root', password='#Gf47722899846', dbname='StaffWatch', host='localhost',
options = list(local_infile = 1))
# Inserir os dados em uma nova tabela no banco de dados
dbWriteTable(con, "grafico_trafego_rede", data_to_db, append = TRUE, row.names = FALSE, overwrite = FALSE)
# Carregar as bibliotecas necessárias
library(RMySQL)
library(dplyr)
library(ggplot2)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='#Gf47722899846', dbname='StaffWatch', host='localhost')
# Consultar os dados
query <- "SELECT ca.dataCaptura,
ac.unidadeMedida AS tipo_rede,
ca.captura AS valor_bytes,
ca.fkComputador
FROM captura ca
INNER JOIN auxComponente ac ON ca.fkAuxComponente = ac.idAuxComponente
WHERE ac.unidadeMedida IN ('redeEnvio', 'redeRecebidos')
ORDER BY ca.fkComputador, ca.dataCaptura;
"
data_raw <- dbGetQuery(con, query)
# Verificando os dados extraídos
print(head(data_raw))
# Transformar os dados
data_processed <- data_raw %>%
mutate(valor_bytes = as.numeric(valor_bytes), # Converter para numérico
valor_megabytes = valor_bytes / (1024^2)) # Convertendo bytes para MB
# Preparar os dados para inserção no banco de dados
data_to_db <- data_processed %>%
select(dataCaptura, valor_megabytes, fkComputador) %>%
rename(data_captura = dataCaptura,
dados_mb = valor_megabytes,
computador = fkComputador)
# Criar ou inserir os dados em uma tabela no banco
dbWriteTable(con, name = "grafico_trafego_rede", value = data_to_db,
append = TRUE, row.names = FALSE, overwrite = FALSE)
# Carregar as bibliotecas necessárias
library(RMySQL)
library(dplyr)
library(ggplot2)
# Conectar ao banco de dados
con <- dbConnect(MySQL(), user='root', password='#Gf47722899846', dbname='StaffWatch', host='localhost')
# Consultar os dados
query <- "SELECT ca.dataCaptura,
ac.unidadeMedida AS tipo_rede,
ca.captura AS valor_bytes,
ca.fkComputador
FROM captura ca
INNER JOIN auxComponente ac ON ca.fkAuxComponente = ac.idAuxComponente
WHERE ac.unidadeMedida IN ('redeEnvio', 'redeRecebidos')
ORDER BY ca.fkComputador, ca.dataCaptura;
"
data_raw <- dbGetQuery(con, query)
# Verificando os dados extraídos
print(head(data_raw))
# Transformar os dados
data_processed <- data_raw %>%
mutate(valor_bytes = as.numeric(valor_bytes), # Converter para numérico
valor_megabytes = valor_bytes / (1024^2)) # Convertendo bytes para MB
# Criar gráfico de tráfego de rede por computador
ggplot(data_processed, aes(x = dataCaptura, y = valor_megabytes, color = as.factor(fkComputador))) +
geom_line() +
geom_point() +
labs(title = "Tráfego de Rede por Computador",
x = "Data de Captura",
y = "Dados em MB",
color = "Computador") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Preparar os dados para inserção no banco de dados
data_to_db <- data_processed %>%
select(dataCaptura, valor_megabytes, fkComputador) %>%
rename(data_captura = dataCaptura,
dados_mb = valor_megabytes,
computador = fkComputador)
# Inserir os dados linha por linha no banco de dados
for (i in 1:nrow(data_to_db)) {
query_insert <- sprintf("INSERT INTO grafico_trafego_rede (data_captura, dados_mb, computador) VALUES ('%s', %f, %d)",
data_to_db$data_captura[i],
data_to_db$dados_mb[i],
data_to_db$computador[i])
dbSendQuery(con, query_insert)
}
View(data_raw)
# Verificando os dados extraídos
print(head(data_raw))
View(data_raw)
